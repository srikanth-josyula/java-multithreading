package org.sample.nodes;

import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.stream.IntStream;

import org.sample.scripts.AlfrescoQueryOps;


public class GetNodeProperties {

    private final static int SKIP_COUNT = Integer.parseInt("20");  // Use Integer.parseInt for converting string to int
    
    private final static String SEARCH_QUERY = "SITE:'test' AND cm:creator:'josyusr' AND TYPE:'jh:JHDocument'";

    public static void main(String[] args) {
        int pageNum = 0;       // Start page number
        AlfrescoQueryOps alfOps = new AlfrescoQueryOps();
        int maxLimit = alfOps.getmaxNodeCountOkHTTP(SEARCH_QUERY);
        
        //int maxLimit = 71;
        
        System.out.println("Total documents found for Admin: " + maxLimit);
        
        ExecutorService executor = Executors.newFixedThreadPool(3);

        // Use Stream.iterate to submit tasks for each range to the executor
        IntStream.iterate(pageNum, i -> i < maxLimit, i -> i + SKIP_COUNT)
                .forEach(i -> {
                    // Submit a task to the executor for each "chunk" of the iteration
                    executor.submit(() -> {
                        System.out.println(Thread.currentThread().getName() + " processing range starting from " + i);
                        // Process the range within this chunk (i.e., from i to min(i + SKIP_COUNT, maxLimit))
                        System.out.println(i);
                        /*for (int j = i; j < Math.min(i + SKIP_COUNT, maxLimit); j++) {
                            System.out.println(Thread.currentThread().getName() + " - " + j);
                        }*/
                    });
                });

        // Shutdown the executor after all tasks are submitted
        executor.shutdown();
    }
}
